name: CI/PR Checks

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

# Cancel previous runs when new commits are pushed
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test-and-build:
        name: Test, Lint & Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci --include=optional

            - name: Run security audit
              run: npm run audit

            - name: Run linting and formatting checks
              run: npm run check

            - name: Run TypeScript type check
              run: npm run typecheck

            - name: Run tests
              run: npm test
              
            - name: Run tests with coverage (PR only)
              if: github.event_name == 'pull_request'
              run: npm run test:ci

            - name: Build project and generate place file
              run: npm run build:place

            - name: Validate build output
              run: |
                  if [ ! -d "out" ]; then
                    echo "‚ùå Build output directory not found"
                    exit 1
                  fi
                  if [ ! -f "completionist.rbxl" ]; then
                    echo "‚ùå Place file not generated"
                    exit 1
                  fi
                  echo "‚úÖ Build completed successfully"
                  echo "‚úÖ Place file generated successfully ($(wc -c < completionist.rbxl) bytes)"

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: completionist
                  path: completionist.rbxl
                  retention-days: 30

            - name: Upload coverage to Codecov
              if: github.event_name == 'pull_request' && success()
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage/lcov.info
                  fail_ci_if_error: false
                  verbose: true

            - name: Comment coverage on PR
              if: github.event_name == 'pull_request' && success()
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      try {
                        const coverageData = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
                        const { lines, statements, functions, branches } = coverageData.total;
                        
                        const body = `üìä **Test Coverage Report**
                      
                      | Metric | Coverage | Threshold |
                      |--------|----------|-----------|
                      | Lines | ${lines.pct}% | 70% |
                      | Statements | ${statements.pct}% | 70% |
                      | Functions | ${functions.pct}% | 70% |
                      | Branches | ${branches.pct}% | 60% |
                      
                      ${lines.pct < 70 || statements.pct < 70 || functions.pct < 70 || branches.pct < 60 ? '‚ö†Ô∏è Coverage below threshold!' : '‚úÖ Coverage meets requirements!'}`;
                        
                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body
                        });
                      } catch (error) {
                        console.log('Coverage summary not found or invalid');
                      }

    # Auto-comment on failures
    pr-feedback:
        name: PR Feedback
        runs-on: ubuntu-latest
        if: failure() && github.event_name == 'pull_request'
        needs: [test-and-build]

        steps:
            - name: Comment on PR failure
              uses: actions/github-script@v7
              with:
                  script: |
                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: '‚ùå **CI Checks Failed**\n\nPlease fix the issues and push your changes:\n\n```bash\n# Fix linting/formatting\nnpm run check:fix\n\n# Ensure build works\nnpm run build\n```\n\n*Check the "Actions" tab for detailed error information.*'
                      })