name: CI/PR Checks

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

# Cancel previous runs when new commits are pushed
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    quality:
        name: Code Quality
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  # Fetch full history for PR diff analysis
                  fetch-depth: ${{ github.event_name == 'pull_request' && 0 || 1 }}

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            # Cache Biome for faster linting
            - name: Cache Biome
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/biome
                      node_modules/.cache/biome
                  key: ${{ runner.os }}-biome-${{ hashFiles('biome.json', 'src/**/*.ts', 'src/**/*.tsx') }}
                  restore-keys: |
                      ${{ runner.os }}-biome-

            - name: Install dependencies
              run: npm ci

            # Security audit
            - name: Run security audit
              run: npm run audit

            # For PRs: Check only changed files (faster)
            # For pushes: Check all files (thorough)
            - name: Run Biome linting
              run: |
                  if [ "${{ github.event_name }}" = "pull_request" ]; then
                    # PR: Check only changed TypeScript files
                    CHANGED_TS_FILES=$(git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -E '\.(ts|tsx)$' | tr '\n' ' ' || true)
                    if [ -n "$CHANGED_TS_FILES" ]; then
                      echo "üîç Linting changed files: $CHANGED_TS_FILES"
                      npx biome lint $CHANGED_TS_FILES
                    else
                      echo "‚úÖ No TypeScript files changed"
                    fi
                  else
                    # Push: Check all files
                    echo "üîç Linting all files"
                    npm run lint
                  fi

            - name: Run Biome formatting check
              run: |
                  if [ "${{ github.event_name }}" = "pull_request" ]; then
                    # PR: Check only changed files that Biome can format
                    CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}..HEAD | grep -E '\.(ts|tsx|json|jsonc)$' | tr '\n' ' ' || true)
                    if [ -n "$CHANGED_FILES" ]; then
                      echo "üé® Format checking changed files: $CHANGED_FILES"
                      npx biome format --check $CHANGED_FILES
                    else
                      echo "‚úÖ No formattable files changed"
                    fi
                  else
                    # Push: Check all files
                    echo "üé® Format checking all files"
                    npm run format
                  fi

            - name: Check for formatting issues
              run: |
                  if [ -n "$(git status --porcelain)" ]; then
                    echo "‚ùå Code formatting issues found. Run 'npm run format:fix' locally."
                    git diff
                    exit 1
                  else
                    echo "‚úÖ Code formatting is clean"
                  fi

    test:
        name: Tests & Coverage
        runs-on: ubuntu-latest
        needs: quality

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            # Cache Jest for faster testing
            - name: Cache Jest
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.cache/jest
                      node_modules/.cache/jest
                   key: ${{ runner.os }}-jest-${{ hashFiles('jest.config.js', 'src/**/*.ts', 'src/**/*.tsx') }}
                  restore-keys: |
                      ${{ runner.os }}-jest-

            - name: Install dependencies
              run: npm ci

            - name: Run tests with coverage
              run: npm run test:ci

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage/lcov.info
                  fail_ci_if_error: false
                  verbose: true

            - name: Comment coverage on PR
              if: github.event_name == 'pull_request'
              uses: actions/github-script@v7
              with:
                  script: |
                      const fs = require('fs');
                      try {
                        const coverageData = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
                        const { lines, statements, functions, branches } = coverageData.total;
                        
                        const body = `üìä **Test Coverage Report**
                      
                      | Metric | Coverage | Threshold |
                      |--------|----------|-----------|
                      | Lines | ${lines.pct}% | 70% |
                      | Statements | ${statements.pct}% | 70% |
                      | Functions | ${functions.pct}% | 70% |
                      | Branches | ${branches.pct}% | 60% |
                      
                      ${lines.pct < 70 || statements.pct < 70 || functions.pct < 70 || branches.pct < 60 ? '‚ö†Ô∏è Coverage below threshold!' : '‚úÖ Coverage meets requirements!'}`;
                        
                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body
                        });
                      } catch (error) {
                        console.log('Coverage summary not found or invalid');
                      }

    build:
        name: Build & Type Check
        runs-on: ubuntu-latest
        needs: [quality, test]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            # Cache TypeScript incremental builds
            - name: Cache TypeScript builds
              uses: actions/cache@v4
              with:
                  path: |
                      out/tsconfig.tsbuildinfo
                      .tsbuildinfo
                  key: ${{ runner.os }}-tsc-${{ hashFiles('tsconfig.json', 'src/**/*.ts', 'src/**/*.tsx') }}
                  restore-keys: |
                      ${{ runner.os }}-tsc-

            # Cache roblox-ts build output
            - name: Cache roblox-ts build
              uses: actions/cache@v4
              with:
                  path: |
                      out/
                      include/
                  key: ${{ runner.os }}-rbxtsc-${{ hashFiles('src/**/*.ts', 'src/**/*.tsx', 'tsconfig.json', 'default.project.json') }}
                  restore-keys: |
                      ${{ runner.os }}-rbxtsc-

            - name: Install dependencies
              run: npm ci

            - name: Run TypeScript type check
              run: npm run typecheck

            - name: Build project
              run: npm run build

            - name: Validate build output
              run: |
                  if [ ! -d "out" ]; then
                    echo "‚ùå Build output directory not found"
                    exit 1
                  fi
                  echo "‚úÖ Build completed successfully"

    # Bundle size analysis - only for PRs
    bundle-size:
        name: Bundle Size Impact
        runs-on: ubuntu-latest
        if: github.event_name == 'pull_request'
        needs: [quality, test, build]

        steps:
            - name: Checkout PR
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Cache node_modules
              uses: actions/cache@v4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            # Cache PR build for size comparison
            - name: Cache PR build
              uses: actions/cache@v4
              with:
                  path: out/
                  key: ${{ runner.os }}-size-pr-${{ github.event.pull_request.head.sha }}-${{ hashFiles('src/**/*.ts', 'src/**/*.tsx') }}

            - name: Install dependencies
              run: npm ci

            - name: Build PR version
              run: npm run build

            - name: Calculate PR bundle size
              run: |
                  PR_SIZE=$(du -sh out/ | cut -f1)
                  echo "PR_BUNDLE_SIZE=$PR_SIZE" >> $GITHUB_ENV

            - name: Checkout base branch
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.base_ref }}

            # Cache base branch build
            - name: Cache base build
              uses: actions/cache@v4
              with:
                  path: out/
                  key: ${{ runner.os }}-size-base-${{ github.base_ref }}-${{ hashFiles('src/**/*.ts', 'src/**/*.tsx') }}

            - name: Install base dependencies
              run: npm ci

            - name: Build base version
              run: npm run build

            - name: Calculate base bundle size
              run: |
                  BASE_SIZE=$(du -sh out/ | cut -f1)
                  echo "BASE_BUNDLE_SIZE=$BASE_SIZE" >> $GITHUB_ENV

            - name: Comment bundle size impact
              uses: actions/github-script@v7
              with:
                  script: |
                      const baseSize = '${{ env.BASE_BUNDLE_SIZE }}';
                      const prSize = '${{ env.PR_BUNDLE_SIZE }}';
                      
                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: `üìä **Bundle Size Impact**\n\n- Base (\`${{ github.base_ref }}\`): **${baseSize}**\n- PR: **${prSize}**\n\n> üöÄ Roblox-ts compiled output comparison`
                      })

    # Auto-comment on PR failures
    pr-feedback:
        name: PR Feedback
        runs-on: ubuntu-latest
        if: failure() && github.event_name == 'pull_request'
        needs: [quality, test, build]

        steps:
            - name: Comment on PR failure
              uses: actions/github-script@v7
              with:
                  script: |
                      github.rest.issues.createComment({
                        issue_number: context.issue.number,
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        body: '‚ùå **CI Checks Failed**\n\nPlease fix the issues and push your changes:\n\n```bash\n# Fix linting/formatting\nnpm run check:fix\n\n# Ensure build works\nnpm run build\n```\n\n*Check the "Actions" tab for detailed error information.*'
                      })