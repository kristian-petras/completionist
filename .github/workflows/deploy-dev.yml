name: Deploy to Development

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy from'
        required: true
        default: 'main'
        type: string
      deployment_message:
        description: 'Deployment message (optional)'
        required: false
        type: string

permissions:
  contents: write

jobs:
  deploy-to-dev:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      
      - name: Install dependencies
        run: npm ci --include=optional
      
      - name: Run security audit
        run: npm run audit
      
      - name: Run linting and formatting checks
        run: npm run check
      
      - name: Run TypeScript type check
        run: npm run typecheck
      
      - name: Run tests
        run: npm test
      
      - name: Build place file
        run: npm run build:place
      
      - name: Validate build output
        run: |
          if [ ! -d "out" ]; then
            echo "‚ùå Build output directory not found"
            exit 1
          fi
          if [ ! -f "completionist.rbxl" ]; then
            echo "‚ùå Place file not generated"
            exit 1
          fi
          echo "‚úÖ Build completed successfully"
          echo "‚úÖ Place file generated successfully ($(wc -c < completionist.rbxl) bytes)"
      
      - name: Install Rokit
        uses: CompeyDev/setup-rokit@v0.1.2
      
      - name: Install tools
        run: rokit install --no-trust-check
      
      - name: Deploy to Roblox (Development)
        run: mantle deploy --environment dev
        env:
          ROBLOSECURITY: ${{ secrets.ROBLOSECURITY }}
          MANTLE_OPEN_CLOUD_API_KEY: ${{ secrets.MANTLE_OPEN_CLOUD_API_KEY }}
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Commit updated mantle state
        run: |
          git add .mantle-state.yml
          if git diff --staged --quiet; then
            echo "‚úÖ No mantle state changes to commit"
          else
            echo "üìù Committing mantle state changes from dev deployment"
            COMMIT_MESSAGE="chore: update mantle state after dev deployment"
            if [ -n "${{ inputs.deployment_message }}" ]; then
              COMMIT_MESSAGE="${COMMIT_MESSAGE} - ${{ inputs.deployment_message }}"
            fi
            COMMIT_MESSAGE="${COMMIT_MESSAGE}

            - Updated development environment state
            - Deployed from branch: ${{ inputs.branch }}
            - Auto-generated by GitHub Actions"
            git commit -m "${COMMIT_MESSAGE}"
            git push origin ${{ inputs.branch }}
            echo "‚úÖ Mantle state committed and pushed successfully"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}